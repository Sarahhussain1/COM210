package stack;

import java.util.Stack;

class StackDelimeter {
  
  public boolean checkCorrectBracket(String s) {
    Stack<Character> sd = new Stack<Character>();
    for(int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch(c) {
        case '{':
        case '[':
        case '(':
          sd.push(c);
          break;
        case '}':
        case ']':
        case ')':
          if(!sd.isEmpty()) {
            char ch = sd.pop();
            if(ch == '{' && c != '}' ||
              ch == '[' && c != ']' ||
              ch == '(' && c != ')') {
              System.out.println("Not valid bracket: " + c);
              return false;
            }
          } else {
            System.out.println("Not valid brackets");
            return false;
          }
          break;
      }
    }
    if(!sd.isEmpty()) {
      System.out.println("Not valid Bracket");
      return false;
    }
    
    return true;
  }
  
}

public class StackWorks {

  public static void main(String[] args) {
    StackDelimeter a = new StackDelimeter();
    
    String sd = "a[b+{c*(u-r)}]";
    System.out.println(a.checkCorrectBracket(sd));
    
    String sd1 = "a[b+{c*(u-r)}}]";
    System.out.println(a.checkCorrectBracket(sd1));
    
    String sd2 = "a+b+c*u-r)}}]";
    System.out.println(a.checkCorrectBracket(sd2));
    
    String sd3 = "a[[b+{c*(u-r)}]";
    System.out.println(a.checkCorrectBracket(sd3));
  }

}
