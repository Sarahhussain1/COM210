import java.util.Stack;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author sarahhussain
 */
public class CheckCorrectBracket {
    public static void main (String [] args) {
}
public boolean checkCorrectBracket(String s) {
Stack<Character> st= new Stack<Character>() ;
for(int i=0; i < s.length(); i++) {
char c= s.charAt(i);
switch (c) {
    case '{':
    case '[':
    case '(':
   st.push(c);
   break;
    case '}':
    case ']':
    case')':
    if(!st.isEmpty()) {
        char ch= st.pop();
        ;
    return false;
    
}
        {if (!st.isEmpty()) {
System.out.println("Not valid Bracket");}
 else {
System.out.println("Not valid brackets");
return false;
}
break;


}

   
    }}
        return false;

    


}

        private void push(char c) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        private char pop() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        private boolean isEmpty() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }


public class Stacks {
    public static void main (String[] args) {
        Stacks a= new Stacks();
        
        String st= "a[b+{c*(u-r)}]";
        System.out.println(a.checkCorrectBracket(st));
        
        String st1= "a[b+{c*(u-r)}}]";
        System.out.println(a.checkCorrectBracket(st));
        
        String st2= "a+b+c*u-r)}}]";
        System.out.println(a.checkCorrectBracket(st));
        
        String st3= "a[[b+{c*(u-r)}}]]";
        System.out.println(a.checkCorrectBracket(st));
}

    private boolean checkCorrectBracket(String st) {
       
        return false;
    
    }
}
